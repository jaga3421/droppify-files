{"version":3,"sources":["droppify.js"],"names":["window","DNDfy","init","options","form","input","details","submitBtn","summary","setAttributes","elem","props","Object","entries","forEach","prop","setAttribute","selector","promptText","activeClass","acceptedFiles","fileMap","Map","dndBox","document","querySelector","unsupportedErrText","acceptedFilesText","length","toString","refreshSummary","summaryText","size","plural","style","visibility","innerText","refreshDetails","innerHTML","values","file","entry","createElement","name","appendChild","id","type","multiple","hidden","label","for","class","createElements","preventDefaults","e","preventDefault","stopPropagation","dropped","classList","remove","files","dataTransfer","exceptions","includes","split","set","push","alert","addEventListener","dragEnter","add","dragLeave","dragOver","removeEntry","key","target","dataset","delete","console","log","submitForm","bindEvents","cssInJS","getElementsByTagName"],"mappings":"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","file":"droppify.js","sourceRoot":"../src","sourcesContent":["(function () {\n    /*\n    *   Summary: Convert an Empty Div into a Drag and Drop file upload element\n    *   Author: jagadeesh.jkp@gmail.com\n    *   Usage: Call DNDfy.init with options (they are optional)\n        *   Selector (class/id of the element tat should be DNDfied)\n        *   promptText (Text to show as Main prompt)\n        *   activeClass (css class to apply when )\n        *   acceptedFiles (accept only those files, else throw a tantrum... No, throw an error)\n    * \n    */\n\n    // Just in case if the library is added twice :P\n    window.DNDfy = window.DNDfy || {};\n    DNDfy.init = function (options = {}) {\n\n        //helpers\n        // To assign multiple Attributes to dynamically created element\n        // Also, I realised there is no out-of-the-box element.setAttributes().. \n        const setAttributes = (elem, props) => {\n            Object.entries(props).forEach(prop =>\n                elem.setAttribute(...prop)\n            )\n        }\n        // Props - setting default values if not passed during init\n        let {\n            selector = '.dnd',\n            promptText = 'Click or Drop your Files here',\n            activeClass = 'dragActive',\n            acceptedFiles = ['mp3','mp4','jpg']\n        } = options;\n        // variables - to be used within\n        let fileMap = new Map(),\n            form,\n            input,\n            details,\n            submitBtn,\n            summary,\n            dndBox = document.querySelector(selector),\n            unsupportedErrText = 'The following file(s) were not added because they are not in supported format';\n\n        let acceptedFilesText = acceptedFiles.length ? ` (Accepted files are : ${acceptedFiles.toString()})` : '';\n\n        /*\n        *   Create the input element, the label element and placeholder to show file count, file names\n        */\n        let createElements = function () {\n            form = document.createElement('form');\n            form.setAttribute('id', 'dragDrop');\n\n            input = document.createElement('input');\n            setAttributes(input, {\n                id: 'fileUploadInp',\n                type: 'file',\n                multiple: true,\n                hidden: true\n            })\n\n            let label = document.createElement('label');\n            label.innerText = promptText;\n            setAttributes(label, {\n                for: 'fileUploadInp',\n                class: 'uploadLabel'\n            })\n\n            summary = document.createElement('div');\n            setAttributes(summary, {\n                class: 'summary'\n            })\n\n            details = document.createElement('div');\n            setAttributes(details, {\n                class: 'details'\n            })\n\n            submitBtn = document.createElement('button');\n            submitBtn.innerHTML = 'Submit';\n            setAttributes(submitBtn, {\n                type: 'submit',\n                class: 'submit-uploadForm'\n            })\n\n            // add the bad boys to DOM\n            form.appendChild(input);\n            form.appendChild(label);\n            form.appendChild(summary);\n            form.appendChild(details);\n            form.appendChild(submitBtn);\n            dndBox.appendChild(form);\n        }\n\n        /*\n        *   Binding the Dragevents, Remove-entry-event\n        */\n        let bindEvents = function () {\n            dndBox.addEventListener('dragenter', dragEnter);\n            dndBox.addEventListener('dragleave', dragLeave);\n            dndBox.addEventListener('dragover', dragOver);\n            dndBox.addEventListener('drop', dropped);\n            details.addEventListener('click', removeEntry);\n            form.addEventListener('submit', submitForm);\n            input.addEventListener('onchange',dropped)\n\n            function preventDefaults(e) {\n                e.preventDefault()\n                e.stopPropagation()\n            }\n            function dragEnter(e) {\n                preventDefaults(e)\n                dndBox.classList.add(`${activeClass}`)\n            }\n\n            function dragLeave(e) {\n                preventDefaults(e)\n                dndBox.classList.remove(`${activeClass}`)\n            }\n            function dragOver(e) {\n                preventDefaults(e)\n                dndBox.classList.add(`${activeClass}`)\n            }\n            function dropped(e) {\n                preventDefaults(e)\n                dndBox.classList.remove(`${activeClass}`);\n                let files = e.dataTransfer.files;\n                let exceptions = [];\n                [...files].forEach(file => {\n                    // On drop, check if the files are already in Map\n                    // If yes then there are No duplicates, If no add them\n                    // EE6 Map rocks !!\n                    if (acceptedFiles.includes(file.name.split('.')[1])) {\n                        fileMap.set(file.name, file);\n                    }\n                    else {\n                        exceptions.push(file.name)\n                    }\n                });\n\n                if (exceptions.length) {\n                    alert(`${unsupportedErrText} : ${exceptions.toString()}`);\n                }\n                refreshSummary();\n                refreshDetails();\n            }\n            function removeEntry(e) {\n                try {\n                    let key = e.target.dataset.key;\n                    if (!key) return;\n\n                    fileMap.delete(key);\n                    refreshSummary();\n                    refreshDetails();\n                }\n                catch (e) {\n                    console.log('Dang! Sorry Bruh')\n                }\n            }\n            function submitForm(e) {\n                e.preventDefault();\n                console.log(fileMap);\n                alert('Well.. Only the front end is done.')\n            }\n\n        }\n\n        let refreshSummary = function () {\n            // todo : optimise : dont refresh just add/delete the node using key\n            let summaryText;\n            if (fileMap.size) {\n                let plural = fileMap.size === 1 ? '' : 's';\n                summaryText = `${fileMap.size} file${plural} added`;\n                submitBtn.style.visibility = 'visible';\n            }\n            else {\n                summaryText = 'No files added';\n                submitBtn.style.visibility = 'hidden';\n            }\n\n            summary.innerText = summaryText + acceptedFilesText;\n        }\n\n        let refreshDetails = function () {\n            details.innerHTML = null;\n            [...fileMap.values()].forEach(file => {\n                let entry = document.createElement('div');\n                entry.innerHTML = file.name;\n                setAttributes(entry, {\n                    'class': 'file-entry',\n                    'data-key': file.name\n                })\n                details.appendChild(entry);\n\n            })\n        }\n\n        // Its Go time\n        createElements();\n        bindEvents();\n        refreshSummary();\n        refreshDetails();\n\n\n        //styles\n        // todo: optimise as per block. Dont inject css if classes are given\n        let cssInJS = document.createElement('style')\n        cssInJS.innerText = `\n        ${selector},\n        ${selector} * {\n            box-sizing: content-box;\n            font-family: system;\n        }\n        ${selector} {\n            margin: 20px;\n            background: #f2f2f2;\n            min-height: 100px;\n            border: 1px solid #f2f2f2;\n            padding: 10px;\n\n        }\n        .${activeClass} {\n            border: 1px dotted #999;\n        }\n        @font-face {\n            font-family: system;\n            font-style: normal;\n            font-weight: 300;\n            src: local(\".SFNSText-Light\"), local(\".HelveticaNeueDeskInterface-Light\"), local(\".LucidaGrandeUI\"), local(\"Ubuntu Light\"), local(\"Segoe UI Light\"), local(\"Roboto-Light\"), local(\"DroidSans\"), local(\"Tahoma\");\n        }\n        .uploadLabel {\n            width: 100%;\n            display: block;\n            padding: 20px 0;\n            text-align: center;\n            border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n            cursor: pointer;\n        }\n        .summary {\n            font-size: .8rem;\n            padding: 10px 0;\n        }\n        .file-entry {\n            padding: 10px;\n            margin-bottom: 5px;\n            background: #dedede;\n            cursor: pointer;\n            position: relative;\n            border-radius: 5px;\n        }\n        .file-entry:after {\n            content: 'x';\n            position: absolute;\n            right: 10px;\n        }\n    `;\n        document.getElementsByTagName('head')[0].appendChild(cssInJS);\n    }\n\n})()\n"]}